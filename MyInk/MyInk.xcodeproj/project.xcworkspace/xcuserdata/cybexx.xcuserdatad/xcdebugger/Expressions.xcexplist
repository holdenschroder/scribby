<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "MyInk.CaptureTouchController.(SaveGlyph in _B1E2EA5140B317C0DF499E8A09BD0510) (MyInk.CaptureTouchController)(Swift.String) -&gt; ():CaptureTouchController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.UINavigationControllerOrientation.navigationController (MyInk.UINavigationControllerOrientation)(ObjectiveC.UINavigationController, willShowViewController : ObjectiveC.UIViewController, animated : Swift.Bool) -&gt; ():UINavigationControllerOrientation.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewController is CaptureTouchController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FontAtlas.AddGlyph(String, image : UIImage, relativeLineHeight : CGFloat, relativeTop : CGFloat, spacingCoords : CGRect) -&gt; ():FontAtlas.swift">
         <PersistentStrings>
            <PersistentString
               value = "relativeTop">
            </PersistentString>
            <PersistentString
               value = "relativeLineHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.AppDelegate.saveContext (MyInk.AppDelegate)() -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "moc.hasChanges">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainMenuController.viewDidLoad() -&gt; ():MainMenuController.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.CoreDataHelper.(applicationDocumentsDirectory.getter : ObjectiveC.NSURL).(closure #1):CoreDataHelper.swift">
         <PersistentStrings>
            <PersistentString
               value = "urls[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.didTapButton (MyInkKeyboard.KeyboardViewController)(Swift.Optional&lt;Swift.AnyObject&gt;) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_capitilization">
            </PersistentString>
            <PersistentString
               value = "autoCapitilization">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.CaptureTouchController.prepareForSegue (MyInk.CaptureTouchController)(ObjectiveC.UIStoryboardSegue, sender : Swift.Optional&lt;Swift.AnyObject&gt;) -&gt; ():CaptureTouchController.swift">
         <PersistentStrings>
            <PersistentString
               value = "lastImage!.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordCell.save() -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_character">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.renderMessage (MyInkKeyboard.KeyboardViewController)() -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "proxy">
            </PersistentString>
            <PersistentString
               value = "proxy.documentContextBeforeInput">
            </PersistentString>
            <PersistentString
               value = "proxy.documentContextAfterInput">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.CaptureWordSelectView.prepareForSegue (MyInk.CaptureWordSelectView)(ObjectiveC.UIStoryboardSegue, sender : Swift.Optional&lt;Swift.AnyObject&gt;) -&gt; ():CaptureWordSelectController.swift">
         <PersistentStrings>
            <PersistentString
               value = "segue.destinationViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.(updateItemHeight in _421D483D9BAD99F53F210A5B0D071367)(CGSize) -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "layout">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TextProxyConsumer.handleConfirmTimer(NSTimer) -&gt; ():TextProxyConsumer.swift">
         <PersistentStrings>
            <PersistentString
               value = "consumedLines">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FontAtlasImage.fullFilePath.getter:FontAtlasImage.swift">
         <PersistentStrings>
            <PersistentString
               value = "filepath">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.KeyboardInstallationInstructions.viewWillLayoutSubviews (MyInk.KeyboardInstallationInstructions)() -&gt; ():KeyboardInstallInstructions.swift">
         <PersistentStrings>
            <PersistentString
               value = "bottomItem.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlas.init (MyInk.FontAtlas.Type)(name : Swift.String, atlasDirectory : Swift.String, managedObjectContext : ObjectiveC.NSManagedObjectContext) -&gt; MyInk.FontAtlas:FontAtlas.swift">
         <PersistentStrings>
            <PersistentString
               value = "count(results!)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.MainMenuController.showCaptureView (MyInk.MainMenuController)(ObjectiveC.UIImage) -&gt; ():MainMenuController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image.CIImage!.extent()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "KeyboardViewController.populateRowWithButtons(UIView, buttonData : [AnyObject]) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "button!.gestureRecognizers">
            </PersistentString>
            <PersistentString
               value = "buttonData">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.collectionView(UICollectionView, cellForItemAtIndexPath : NSIndexPath) -&gt; UICollectionViewCell:TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "cell.frame.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.textWillChange (MyInkKeyboard.KeyboardViewController)(ObjectiveC.UITextInput) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "textInput">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static ImageCropUtility.FindInkColor(CGImage) -&gt; CIColor:ImageCropUtility.swift">
         <PersistentStrings>
            <PersistentString
               value = "color.red">
            </PersistentString>
            <PersistentString
               value = "color.green">
            </PersistentString>
            <PersistentString
               value = "color.blue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "KeyboardViewController.buildKeyboard(KeyboardViewController.KeyboardLayouts) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "keyboardView.backgroundColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialPhraseController.(UpdateMessage in _AAA7D608108BD89027C7001D1B1EBCD1)() -&gt; ():TutorialPhraseController.swift">
         <PersistentStrings>
            <PersistentString
               value = "messageImageView.frame.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.renderMessage (MyInkKeyboard.KeyboardViewController)(ObjectiveC.UIButton) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "proxy.documentContextAfterInput">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.viewWillAppear (MyInkKeyboard.KeyboardViewController)(Swift.Bool) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "proxy.autocapitalizationType">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontMessageRenderer.renderMessage (MyInk.FontMessageRenderer)(Swift.String, imageSize : C.CGSize, backgroundColor : ObjectiveC.UIColor) -&gt; ObjectiveC.UIImage:FontMessageRenderer.swift">
         <PersistentStrings>
            <PersistentString
               value = "glyphData.characterCoord">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.viewDidAppear (MyInkKeyboard.KeyboardViewController)(Swift.Bool) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "proxy.documentContextBeforeInput">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UIDrawView.drawLineFrom(CGPoint, toPoint : CGPoint) -&gt; ():UIDrawView.swift">
         <PersistentStrings>
            <PersistentString
               value = "tempImageView.bounds.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapGlyphController.Handle_SaveButton(AnyObject) -&gt; ():MapGlyphController.swift">
         <PersistentStrings>
            <PersistentString
               value = "textfield!.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlasImage.save (MyInk.FontAtlasImage)() -&gt; ():FontAtlasImage.swift">
      </ContextState>
      <ContextState
         contextName = "FontMessageRenderer.renderMessage(String, imageSize : CGSize, lineHeight : CGFloat, backgroundColor : UIColor, showDebugInfo : Bool) -&gt; UIImage:FontMessageRenderer.swift">
         <PersistentStrings>
            <PersistentString
               value = "renderedImage!.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlasData.AddCharacter (MyInk.FontAtlasData)(MyInk.FontAtlasCharacter) -&gt; ():FontAtlasData.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.SetupCharacterController.(SaveGlyph in _7978DCDBC1BA689918ABC6596BA05646) (MyInk.SetupCharacterController)(Swift.String) -&gt; ():SetupCharacterController.swift">
      </ContextState>
      <ContextState
         contextName = "TutorialPhraseController.HandleNextBtn(AnyObject) -&gt; ():TutorialPhraseController.swift">
         <PersistentStrings>
            <PersistentString
               value = "tutorialState!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.viewWillLayoutSubviews() -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "phrase">
            </PersistentString>
            <PersistentString
               value = "messageImageView.frame.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlas.AddGlyph (MyInk.FontAtlas)(Swift.String, image : ObjectiveC.UIImage, relativeLineHeight : CoreGraphics.CGFloat, relativeLinePosition : CoreGraphics.CGFloat) -&gt; ():FontAtlas.swift">
      </ContextState>
      <ContextState
         contextName = "UIDrawCaptureView.save(String) -&gt; ():UIDrawCaptureView.swift">
         <PersistentStrings>
            <PersistentString
               value = "glyphArea.height">
            </PersistentString>
            <PersistentString
               value = "referenceImage!.frame.size">
            </PersistentString>
            <PersistentString
               value = "reference_rect">
            </PersistentString>
            <PersistentString
               value = "mapping">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "KeyboardViewController.updateButtonVisualization(UIControl) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "key.keyData!.title">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.viewDidLoad (MyInkKeyboard.KeyboardViewController)() -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.superview">
            </PersistentString>
            <PersistentString
               value = "proxy.autocapitalizationType!">
            </PersistentString>
            <PersistentString
               value = "UIScreen.mainScreen().bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.AppDelegate.(persistentStoreCoordinator.getter : Swift.Optional&lt;ObjectiveC.NSPersistentStoreCoordinator&gt;).(closure #1):AppDelegate.swift">
      </ContextState>
      <ContextState
         contextName = "TutorialWordCell.populate(Character) -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "label!.clipsToBounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.CaptureWordSelectController.loadImage (MyInk.CaptureWordSelectController)(ObjectiveC.UIImage) -&gt; ():CaptureWordSelectController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image.CGImage">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "KeyboardViewController.handleShiftTap(AnyObject?) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender is UITouch">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialPhraseController.(UpdateMessages in _AAA7D608108BD89027C7001D1B1EBCD1)() -&gt; ():TutorialPhraseController.swift">
         <PersistentStrings>
            <PersistentString
               value = "messageImageView.frame.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.viewWillAppear(Bool) -&gt; ():TutorialWordController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlasImage.loadedImage.getter : ObjectiveC.UIImage:FontAtlasImage.swift">
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.buildKeyboard (MyInkKeyboard.KeyboardViewController)(MyInkKeyboard.KeyboardViewController.KeyboardViews) -&gt; ():KeyboardViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.UINavigationControllerOrientation.pushViewController (MyInk.UINavigationControllerOrientation)(ObjectiveC.UIViewController, animated : Swift.Bool) -&gt; ():UINavigationControllerOrientation.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewController is CaptureTouchController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialPhaseOutroController.setMessage(UIImage) -&gt; ():TutorialPhraseOutroController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FontMessageRenderer.renderMessage(String, imageSize : CGSize, lineHeight : CGFloat, backgroundColor : UIColor, showDebugInfo : Bool) -&gt; UIImage?:FontMessageRenderer.swift">
         <PersistentStrings>
            <PersistentString
               value = "glyphData.relativeTopline">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.handleDeleteKeyHeldLong (MyInkKeyboard.KeyboardViewController)(ObjectiveC.NSTimer) -&gt; ():KeyboardViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlasGlyph.imageCellUV.getter : C.CGRect:FontAtlasGlyph.swift">
         <PersistentStrings>
            <PersistentString
               value = "uvCoord">
            </PersistentString>
            <PersistentString
               value = "mapping">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.updateViewConstraints (MyInkKeyboard.KeyboardViewController)() -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "inputView.superview">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.MapGlyphController.Handle_TextFieldChanged (MyInk.MapGlyphController)(ObjectiveC.UITextField) -&gt; ():MapGlyphController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.handlePanGesture(UIGestureRecognizer) -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "recognizer.view is UIDrawView">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.TextProxyConsumer.consume (MyInkKeyboard.TextProxyConsumer)(ObjectiveC.UITextDocumentProxy, onCompleteEvent : (Swift.String) -&gt; ()) -&gt; ():TextProxyConsumer.swift">
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.KeyboardViewController.addConstraintsToInputView (MyInkKeyboard.KeyboardViewController)(ObjectiveC.UIView, rowViews : Swift.Array&lt;ObjectiveC.UIView&gt;) -&gt; ():KeyboardViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_inputViewConstraints">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TutorialWordController.(updateItemHeight in _421D483D9BAD99F53F210A5B0D071367)() -&gt; ():TutorialWordController.swift">
         <PersistentStrings>
            <PersistentString
               value = "layout.minimumInteritemSpacing">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.FontAtlasImage.fullFilePath.getter : Swift.String:FontAtlasImage.swift">
         <PersistentStrings>
            <PersistentString
               value = "filepath">
            </PersistentString>
            <PersistentString
               value = "sharedDirectory!.path">
            </PersistentString>
            <PersistentString
               value = "url.path">
            </PersistentString>
            <PersistentString
               value = "NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true)[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapGlyphController.Handle_TextFieldChanged(UITextField) -&gt; ():MapGlyphController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender.text!.characters.first">
            </PersistentString>
            <PersistentString
               value = "text!.characters.first">
            </PersistentString>
            <PersistentString
               value = "sender.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "KeyboardViewController.handleProxyConsumerComplete(String) -&gt; ():KeyboardViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.UINavigationControllerOrientation.supportedInterfaceOrientations (MyInk.UINavigationControllerOrientation)() -&gt; Swift.Int:UINavigationControllerOrientation.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.visibleViewController">
            </PersistentString>
            <PersistentString
               value = "self.presentedViewController is CaptureTouchController">
            </PersistentString>
            <PersistentString
               value = "topOfStack is CaptureTouchController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.CoreDataHelper.(embeddedManagedObjectContext.getter : Swift.Optional&lt;ObjectiveC.NSManagedObjectContext&gt;).(closure #1):CoreDataHelper.swift">
      </ContextState>
      <ContextState
         contextName = "MyInk.MainMenuController.imagePickerController (MyInk.MainMenuController)(ObjectiveC.UIImagePickerController, didFinishPickingImage : Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.UIImage&gt;, editingInfo : Swift.ImplicitlyUnwrappedOptional&lt;Swift.Dictionary&lt;ObjectiveC.NSObject, Swift.AnyObject&gt;&gt;) -&gt; ():MainMenuController.swift">
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.TextProxyConsumer.handleForwardTimer (MyInkKeyboard.TextProxyConsumer)(ObjectiveC.NSTimer) -&gt; ():TextProxyConsumer.swift">
         <PersistentStrings>
            <PersistentString
               value = "lastLine">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInk.ViewController.viewDidLoad (MyInk.ViewController)() -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "testAtlas.characters">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FontMessageRenderer.renderMessage(String, imageSize : CGSize, lineHeight : CGFloat, backgroundColor : UIColor, addWatermark : Bool, showDebugInfo : Bool) -&gt; UIImage?:FontMessageRenderer.swift">
         <PersistentStrings>
            <PersistentString
               value = "_watermark!.size.height">
            </PersistentString>
            <PersistentString
               value = "renderBounds.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MyInkKeyboard.TextProxyConsumer.handleBackwardTimer (MyInkKeyboard.TextProxyConsumer)(ObjectiveC.NSTimer) -&gt; ():TextProxyConsumer.swift">
         <PersistentStrings>
            <PersistentString
               value = "message">
            </PersistentString>
            <PersistentString
               value = "lastLine">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
