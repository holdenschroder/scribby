

1. CoreDataHelper

    static var saveDirectory:NSURL = {
        return applicationDocumentsDirectory
    }()


2. App Delegate

    lazy var currentAtlas:FontAtlas? = {
        var atlas = FontAtlas(name: SharedMyInkValues.EmbeddedAtlasName, atlasDirectory: SharedMyInkValues.EmbeddedAtlasDirectory, managedObjectContext: self.coreData.managedObjectContext!)
        atlas.onSaveEvents.append(self.handleAtlasSave)
        return atlas
    }()


3. FontAtlasImage

func save() {
    if _loadedImage == nil || filepath.isEmpty /*|| filepath.hasPrefix(SharedMyInkValues.EmbeddedAtlasDirectory)*/ {
        return
    }

fullFilePath
    get {
    var url:NSURL!
    //            if filepath.hasPrefix(SharedMyInkValues.EmbeddedAtlasDirectory) {
    //                url = NSBundle.mainBundle().URLForResource(SharedMyInkValues.EmbeddedAtlasURL, withExtension: "png")
    //            }
    //            else {
    let path = CoreDataHelper.saveDirectory
    var modifiedFilePath:String = ""
    let pathComponents = filepath.componentsSeparatedByString("/")
    for partIndex in 0..<pathComponents.count {
    modifiedFilePath += pathComponents[partIndex] + "/"
    }
    url = path.URLByAppendingPathComponent(modifiedFilePath)
    //}
    return url
    }

4. Export Container


5. Replace files in Resources